# Generated by Django 4.2.7 on 2024-01-03 16:56

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Street', models.CharField(blank=True, max_length=255, null=True)),
                ('Number', models.CharField(blank=True, max_length=15, null=True)),
                ('Complement', models.CharField(blank=True, max_length=50, null=True)),
                ('ZipCode', models.CharField(blank=True, max_length=9, null=True)),
                ('City', models.CharField(blank=True, max_length=50, null=True)),
                ('State', models.CharField(blank=True, max_length=2, null=True)),
                ('Country', models.CharField(blank=True, max_length=35, null=True)),
            ],
            options={
                'verbose_name': 'Address',
            },
        ),
        migrations.CreateModel(
            name='AirlineData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TicketNumber', models.CharField(blank=True, max_length=13, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CardOnFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Usage', models.CharField(max_length=255, null=True)),
                ('Reason', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CardNumber', models.CharField(max_length=19)),
                ('Holder', models.CharField(max_length=25)),
                ('ExpirationDate', models.CharField(max_length=7)),
                ('SecurityCode', models.CharField(max_length=3)),
                ('SaveCard', models.BooleanField()),
                ('Brand', models.CharField(max_length=10)),
                ('CardOnFile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='_supplier.cardonfile')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=255)),
                ('Email', models.EmailField(max_length=254)),
                ('Birthdate', models.CharField(max_length=10)),
                ('Address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='address', to='_supplier.addresscustomer')),
                ('Billing', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='billing_address', to='_supplier.addresscustomer')),
                ('DeliveryAddress', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delivery_address', to='_supplier.addresscustomer')),
            ],
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Method', models.CharField(help_text='Método do link', max_length=10)),
                ('Rel', models.CharField(help_text='Relacionamento do link', max_length=10)),
                ('Href', models.URLField(help_text='URL do link')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Currency', models.CharField(max_length=3)),
                ('Country', models.CharField(max_length=5)),
                ('ServiceTaxAmount', models.IntegerField()),
                ('Installments', models.IntegerField()),
                ('Interest', models.CharField(choices=[('Loja', 'ByMerchant'), ('Cartao', 'ByIssuer')], max_length=10)),
                ('Capture', models.BooleanField(default=True)),
                ('Authenticate', models.BooleanField(default=False)),
                ('Recurrent', models.BooleanField(default=True)),
                ('SoftDescriptor', models.CharField(default='123456789ABCD', max_length=13)),
                ('IsCryptoCurrencyNegotiation', models.BooleanField(default=False)),
                ('Type', models.CharField(choices=[('CartaoCredito', 'CreditCard')], max_length=13)),
                ('Amount', models.IntegerField()),
                ('CreditCard', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='_supplier.creditcard')),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('price', models.FloatField(verbose_name='Valor')),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'plan',
            },
        ),
        migrations.CreateModel(
            name='RequestCancelTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.CharField(blank=True, max_length=36, null=True)),
                ('payment_id', models.CharField(max_length=36)),
                ('order_id', models.CharField(blank=True, max_length=36, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResponseCancelTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.CharField(choices=[('NOT_FINISHED', 0), ('AUTHORIZED', 1), ('PAYMENT_CONFIRMED', 2), ('DENIED', 3), ('VOIDED', 10), ('REFUNDED', 11), ('PENDING', 12), ('ABORTED', 13), ('SCHEDULED', 20)], max_length=10)),
                ('ProofOfSale', models.CharField(max_length=6)),
                ('Tid', models.CharField(max_length=20)),
                ('AuthorizationCode', models.CharField(max_length=6)),
                ('ReturnCode', models.CharField(max_length=32)),
                ('ReturnMessage', models.TextField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=200)),
                ('phone', models.CharField(max_length=16)),
                ('password', models.CharField(max_length=128)),
                ('doc_number', models.CharField(max_length=18, null=True)),
                ('name', models.CharField(max_length=150, null=True)),
                ('fantasy_name', models.CharField(max_length=150, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'supplier',
            },
        ),
        migrations.CreateModel(
            name='ResponseCreditCard',
            fields=[
                ('creditcard_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='_supplier.creditcard')),
                ('PaymentAccountReference', models.CharField(help_text='Número de referência da conta de pagamento', max_length=29)),
            ],
            options={
                'verbose_name': 'CreditCard',
            },
            bases=('_supplier.creditcard', models.Model),
        ),
        migrations.CreateModel(
            name='ResponseCustomer',
            fields=[
                ('customer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='_supplier.customer')),
                ('Identity', models.CharField(max_length=14)),
                ('IdentityType', models.CharField(choices=[('CPF', 'CPF'), ('CNPJ', 'CNPJ')], max_length=4)),
            ],
            options={
                'verbose_name': 'Customer',
            },
            bases=('_supplier.customer', models.Model),
        ),
        migrations.CreateModel(
            name='ResponsePayment',
            fields=[
                ('payment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='_supplier.payment')),
                ('ResponseCreditCard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='_supplier.responsecreditcard', verbose_name='CreditCard')),
            ],
            options={
                'verbose_name': 'Payment',
            },
            bases=('_supplier.payment', models.Model),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MerchantOrderId', models.CharField(max_length=50)),
                ('Customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='_supplier.customer')),
                ('Payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='_supplier.payment')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('expirate_date', models.DateTimeField(default=datetime.datetime(2025, 1, 2, 13, 56, 1, 582196))),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='_supplier.plan')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='orders', to='_supplier.supplier')),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=300)),
                ('number', models.CharField(max_length=10)),
                ('complement', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=2)),
                ('zip_code', models.CharField(max_length=8)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='_supplier.supplier')),
            ],
            options={
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='SupplierUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='_supplier.supplier')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='ResponseTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MerchantOrderId', models.CharField(help_text='Número da autorização, identico ao NSU.', max_length=50)),
                ('IsCryptoCurrencyNegotiation', models.BooleanField(help_text='Indica se a transação envolve negociação de criptomoedas')),
                ('TryAutomaticCancellation', models.BooleanField(help_text='Tentar cancelamento automático em caso de erro durante a autorização')),
                ('ProofOfSale', models.CharField(help_text='Número da autorização', max_length=6)),
                ('Tid', models.CharField(help_text='ID da transação na adquirente', max_length=20)),
                ('AuthorizationCode', models.CharField(help_text='Código de autorização', max_length=6)),
                ('SoftDescriptor', models.CharField(help_text='Texto impresso na fatura bancária', max_length=13)),
                ('PaymentId', models.UUIDField(help_text='Número de identificação do pagamento')),
                ('Type', models.CharField(help_text='Tipo da transação', max_length=20)),
                ('Amount', models.DecimalField(decimal_places=2, help_text='Valor da transação', max_digits=15)),
                ('CaptureAmount', models.DecimalField(decimal_places=2, help_text='Valor da transação', max_digits=15)),
                ('Country', models.CharField(help_text='País', max_length=3)),
                ('Status', models.CharField(choices=[('NOT_FINISHED', 0), ('AUTHORIZED', 1), ('PAYMENT_CONFIRMED', 2), ('DENIED', 3), ('VOIDED', 10), ('REFUNDED', 11), ('PENDING', 12), ('ABORTED', 13), ('SCHEDULED', 20)], help_text='Status da transação', max_length=17)),
                ('ReturnCode', models.CharField(help_text='Código de retorno da adquirente', max_length=32)),
                ('ReturnMessage', models.CharField(help_text='Mensagem de retorno da adquirente', max_length=512)),
                ('MerchantAdviceCode', models.CharField(help_text='Código de orientação da bandeira', max_length=2)),
                ('AirlineData', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='_supplier.airlinedata')),
                ('Links', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='_supplier.links')),
                ('Customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='_supplier.responsecustomer')),
                ('Payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='_supplier.responsepayment')),
            ],
            options={
                'verbose_name': 'ResponseSale',
            },
        ),
    ]
