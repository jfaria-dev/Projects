# Generated by Django 5.0.2 on 2024-03-02 18:56

import _web.models.supplier.details_model
import _web.models.supplier.payment_model
import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('_panel', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('quantity', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'attributes',
            },
        ),
        migrations.CreateModel(
            name='Screen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('namespace', models.CharField(default='user', max_length=100)),
                ('url', models.CharField(max_length=100)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('paragraph', models.CharField(blank=True, max_length=400, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime(2024, 3, 2, 15, 56, 4, 271001))),
                ('modified_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'screens',
                'db_table': 'web_screen',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=2)),
                ('name', models.CharField(max_length=250)),
                ('code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'state',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('phone', models.CharField(max_length=16, null=True)),
                ('document', models.CharField(max_length=18, null=True)),
                ('photo', models.ImageField(null=True, upload_to='user/photo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration', models.PositiveIntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attributes', models.ManyToManyField(blank=True, related_name='plan_attributes', to='_web.attribute')),
            ],
            options={
                'db_table': 'plan',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('action', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('screen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu_screen', to='_web.screen')),
            ],
            options={
                'verbose_name_plural': 'menus',
                'db_table': 'web_menu',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=250)),
                ('code', models.CharField(max_length=10)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='_web.state')),
            ],
            options={
                'db_table': 'city',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=200, unique=True)),
                ('phone', models.CharField(max_length=15)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('service', models.ManyToManyField(blank=True, related_name='suppliers', through='_panel.Service', to='_panel.generalservice')),
            ],
            options={
                'db_table': 'supplier',
            },
        ),
        migrations.CreateModel(
            name='AvailableTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('Domingo', 'Domingo'), ('Segunda', 'Segunda'), ('Terça', 'Terça'), ('Quarta', 'Quarta'), ('Quinta', 'Quinta'), ('Sexta', 'Sexta'), ('Sábado', 'Sábado')], default='Domingo', max_length=20)),
                ('open_time', models.CharField(choices=[('00:00', '00:00'), ('01:00', '01:00'), ('02:00', '02:00'), ('03:00', '03:00'), ('04:00', '04:00'), ('05:00', '05:00'), ('06:00', '06:00'), ('07:00', '07:00'), ('08:00', '08:00'), ('09:00', '09:00'), ('10:00', '10:00'), ('11:00', '11:00'), ('12:00', '12:00'), ('13:00', '13:00'), ('14:00', '14:00'), ('15:00', '15:00'), ('16:00', '16:00'), ('17:00', '17:00'), ('18:00', '18:00'), ('19:00', '19:00'), ('20:00', '20:00'), ('21:00', '21:00'), ('22:00', '22:00'), ('23:00', '23:00')], default='08:00', max_length=5)),
                ('close_time', models.CharField(choices=[('00:00', '00:00'), ('01:00', '01:00'), ('02:00', '02:00'), ('03:00', '03:00'), ('04:00', '04:00'), ('05:00', '05:00'), ('06:00', '06:00'), ('07:00', '07:00'), ('08:00', '08:00'), ('09:00', '09:00'), ('10:00', '10:00'), ('11:00', '11:00'), ('12:00', '12:00'), ('13:00', '13:00'), ('14:00', '14:00'), ('15:00', '15:00'), ('16:00', '16:00'), ('17:00', '17:00'), ('18:00', '18:00'), ('19:00', '19:00'), ('20:00', '20:00'), ('21:00', '21:00'), ('22:00', '22:00'), ('23:00', '23:00')], default='18:00', max_length=5)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='available_times', to='_web.supplier')),
            ],
            options={
                'db_table': 'supplier_availability_time',
            },
        ),
        migrations.CreateModel(
            name='SupplierAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=200)),
                ('number', models.CharField(max_length=10)),
                ('complement', models.CharField(blank=True, max_length=200, null=True)),
                ('neighborhood', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=200)),
                ('state', models.CharField(max_length=2)),
                ('postal_code', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(code='invalid_registration', message='Informe um Cep válido.', regex='^\\d{2}[.]\\d{3}[-]\\d{3}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('supplier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='_web.supplier')),
            ],
            options={
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='SupplierDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=4)),
                ('company_document_number', models.CharField(max_length=19, validators=[_web.models.supplier.details_model.SupplierDetails.company_document_is_valid])),
                ('birthdate', models.DateField(blank=True, null=True, validators=[_web.models.supplier.details_model.SupplierDetails.date_is_valid])),
                ('company_name', models.CharField(max_length=250)),
                ('company_name_show', models.CharField(max_length=250)),
                ('owner_document_number', models.CharField(blank=True, max_length=14, null=True, validators=[_web.models.supplier.details_model.SupplierDetails.company_document_is_valid])),
                ('photo', models.ImageField(upload_to=_web.models.supplier.details_model.SupplierDetails.image_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('term', models.BooleanField()),
                ('cnd', models.FileField(upload_to=_web.models.supplier.details_model.SupplierDetails.cnd_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('sign_at', models.DateTimeField(auto_now_add=True)),
                ('segment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='suppliers', to='_panel.category')),
                ('supplier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='_web.supplier')),
            ],
            options={
                'db_table': 'supplier_details',
            },
        ),
        migrations.CreateModel(
            name='SupplierOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(default=datetime.datetime(2025, 3, 2, 15, 56, 4, 464140))),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='orders_plan', to='_web.plan')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='orders_supplier', to='_web.supplier')),
            ],
            options={
                'db_table': 'supplier_order',
            },
        ),
        migrations.CreateModel(
            name='PaymentCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=19, validators=[_web.models.supplier.payment_model.PaymentCard.number_is_valid])),
                ('card_holder_name', models.CharField(max_length=150)),
                ('expiration_date', models.CharField(max_length=5, validators=[_web.models.supplier.payment_model.PaymentCard.expirate_date])),
                ('security_code', models.CharField(max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_card', to='_web.supplierorder')),
            ],
            options={
                'db_table': 'payment_card',
            },
        ),
        migrations.CreateModel(
            name='UserOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.CharField(choices=[('00:00', '00:00'), ('01:00', '01:00'), ('02:00', '02:00'), ('03:00', '03:00'), ('04:00', '04:00'), ('05:00', '05:00'), ('06:00', '06:00'), ('07:00', '07:00'), ('08:00', '08:00'), ('09:00', '09:00'), ('10:00', '10:00'), ('11:00', '11:00'), ('12:00', '12:00'), ('13:00', '13:00'), ('14:00', '14:00'), ('15:00', '15:00'), ('16:00', '16:00'), ('17:00', '17:00'), ('18:00', '18:00'), ('19:00', '19:00'), ('20:00', '20:00'), ('21:00', '21:00'), ('22:00', '22:00'), ('23:00', '23:00')], default='08:00', max_length=5)),
                ('value', models.CharField(default='0,00', max_length=10)),
                ('quantity', models.PositiveIntegerField()),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='_panel.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='_web.user')),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='_panel.worker')),
            ],
            options={
                'db_table': 'user_order',
            },
        ),
    ]
